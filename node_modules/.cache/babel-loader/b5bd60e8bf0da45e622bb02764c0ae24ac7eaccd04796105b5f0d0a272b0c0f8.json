{"ast":null,"code":"import { createSlice, nanoid } from '@reduxjs/toolkit';\nconst initialState = {\n  tasks: {\n    \"1\": {\n      id: \"1\",\n      title: \"Brainstorming\",\n      description: \"Brainstorming brings team members’ diverse experience into play.\",\n      status: \"todo\",\n      priority: \"Low\",\n      category: \"General\",\n      assignees: [{\n        avatar: \"/avatars/a1.png\"\n      }, {\n        avatar: \"/avatars/a2.png\"\n      }],\n      comments: 12,\n      files: 0\n    },\n    \"2\": {\n      id: \"2\",\n      title: \"Research\",\n      description: \"User research helps you to create an optimal product for users.\",\n      status: \"todo\",\n      priority: \"High\",\n      category: \"Work\",\n      assignees: [{\n        avatar: \"/avatars/a3.png\"\n      }],\n      comments: 10,\n      files: 3\n    },\n    \"3\": {\n      id: \"3\",\n      title: \"Wireframes\",\n      description: \"Low fidelity wireframes include the most basic content and visuals.\",\n      status: \"inprogress\",\n      priority: \"Low\",\n      category: \"Design\",\n      assignees: [{\n        avatar: \"/avatars/a1.png\"\n      }, {\n        avatar: \"/avatars/a4.png\"\n      }],\n      comments: 8,\n      files: 1\n    },\n    \"4\": {\n      id: \"4\",\n      title: \"Design System\",\n      description: \"It just needs to adapt the UI from what you did before.\",\n      status: \"done\",\n      priority: \"Completed\",\n      category: \"Design\",\n      assignees: [{\n        avatar: \"/avatars/a2.png\"\n      }],\n      comments: 5,\n      files: 2\n    }\n  }\n};\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    addTask: {\n      reducer(state, action) {\n        const t = action.payload;\n        state.tasks[t.id] = t;\n      },\n      prepare({\n        title,\n        description,\n        priority = 'Low',\n        category = 'General',\n        dueDate = null,\n        status = 'todo'\n      }) {\n        return {\n          payload: {\n            id: nanoid(),\n            title,\n            description,\n            priority,\n            category,\n            dueDate,\n            status,\n            createdAt: new Date().toISOString()\n          }\n        };\n      }\n    },\n    updateTask(state, action) {\n      const {\n        id,\n        changes\n      } = action.payload;\n      if (state.tasks[id]) state.tasks[id] = {\n        ...state.tasks[id],\n        ...changes\n      };\n    },\n    deleteTask(state, action) {\n      delete state.tasks[action.payload];\n    },\n    moveTask(state, action) {\n      const {\n        id,\n        status\n      } = action.payload;\n      if (state.tasks[id]) state.tasks[id].status = status;\n    },\n    bulkSet(state, action) {\n      state.tasks = action.payload || {};\n    }\n  }\n});\nexport const {\n  addTask,\n  updateTask,\n  deleteTask,\n  moveTask,\n  bulkSet\n} = tasksSlice.actions;\nexport default tasksSlice.reducer;","map":{"version":3,"names":["createSlice","nanoid","initialState","tasks","id","title","description","status","priority","category","assignees","avatar","comments","files","tasksSlice","name","reducers","addTask","reducer","state","action","t","payload","prepare","dueDate","createdAt","Date","toISOString","updateTask","changes","deleteTask","moveTask","bulkSet","actions"],"sources":["C:/Users/Indra/Downloads/creative-upaay-dashboard/mnt/data/creative-upaay-dashboard/src/redux/slices/tasksSlice.js"],"sourcesContent":["import { createSlice, nanoid } from '@reduxjs/toolkit';\n\nconst initialState = {\n  tasks: {\n    \"1\": {\n      id: \"1\",\n      title: \"Brainstorming\",\n      description:\n        \"Brainstorming brings team members’ diverse experience into play.\",\n      status: \"todo\",\n      priority: \"Low\",\n      category: \"General\",\n      assignees: [\n        { avatar: \"/avatars/a1.png\" },\n        { avatar: \"/avatars/a2.png\" },\n      ],\n      comments: 12,\n      files: 0,\n    },\n    \"2\": {\n      id: \"2\",\n      title: \"Research\",\n      description:\n        \"User research helps you to create an optimal product for users.\",\n      status: \"todo\",\n      priority: \"High\",\n      category: \"Work\",\n      assignees: [{ avatar: \"/avatars/a3.png\" }],\n      comments: 10,\n      files: 3,\n    },\n    \"3\": {\n      id: \"3\",\n      title: \"Wireframes\",\n      description:\n        \"Low fidelity wireframes include the most basic content and visuals.\",\n      status: \"inprogress\",\n      priority: \"Low\",\n      category: \"Design\",\n      assignees: [\n        { avatar: \"/avatars/a1.png\" },\n        { avatar: \"/avatars/a4.png\" },\n      ],\n      comments: 8,\n      files: 1,\n    },\n    \"4\": {\n      id: \"4\",\n      title: \"Design System\",\n      description: \"It just needs to adapt the UI from what you did before.\",\n      status: \"done\",\n      priority: \"Completed\",\n      category: \"Design\",\n      assignees: [{ avatar: \"/avatars/a2.png\" }],\n      comments: 5,\n      files: 2,\n    },\n  },\n};\n\n\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    addTask: {\n      reducer(state, action) {\n        const t = action.payload;\n        state.tasks[t.id] = t;\n      },\n      prepare({ title, description, priority = 'Low', category = 'General', dueDate = null, status = 'todo' }) {\n        return {\n          payload: {\n            id: nanoid(),\n            title,\n            description,\n            priority,\n            category,\n            dueDate,\n            status,\n            createdAt: new Date().toISOString()\n          }\n        };\n      }\n    },\n    updateTask(state, action) {\n      const { id, changes } = action.payload;\n      if (state.tasks[id]) state.tasks[id] = { ...state.tasks[id], ...changes };\n    },\n    deleteTask(state, action) {\n      delete state.tasks[action.payload];\n    },\n    moveTask(state, action) {\n      const { id, status } = action.payload;\n      if (state.tasks[id]) state.tasks[id].status = status;\n    },\n    bulkSet(state, action) {\n      state.tasks = action.payload || {};\n    }\n  }\n});\n\nexport const { addTask, updateTask, deleteTask, moveTask, bulkSet } = tasksSlice.actions;\nexport default tasksSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}